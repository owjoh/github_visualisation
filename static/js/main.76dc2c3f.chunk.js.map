{"version":3,"sources":["desktop-icon.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","width","button","background","border","borderRadius","boxShadow","color","height","padding","App","React","useState","name","setName","description","setDescription","owner","setOwner","stars","setStars","input","setInput","graphData","setGraphData","radarData","setRadarData","useEffect","fetch","then","res","json","data","findInputInData","found","total_count","i","items","length","setData","stargazers_count","login","console","log","gdata","className","classes","repo","setRepo","Container","component","maxWidth","CssBaseline","src","Logo","alt","Typography","variant","noValidate","onSubmit","event","preventDefault","TextField","required","fullWidth","id","label","textField","autoComplete","onChange","target","value","autoFocus","Button","type","RepoSearch","style","justifyContent","Card","minWidth","CardActionArea","CardContent","gutterBottom","CardActions","MediaCard","Array","isArray","domainPadding","VictoryTheme","material","animate","duration","onLoad","axisLabel","fontSize","tickLabels","angle","grid","strokeWidth","dependentAxis","x","y","fill","events","eventHandlers","onMouseOver","eventKey","mutation","testBar","polar","maxDomain","axis","stroke","tickFormat","t","RadarChart","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,0C,6WCkBrCC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC,UAAW,CACTC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,QAI1CC,MAAO,CACLC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQb,EAAMQ,QAAQ,IAExBM,KAAM,CACJC,MAAO,OACPR,UAAWP,EAAMQ,QAAQ,IAE3BQ,OAAQ,CACNH,OAAQb,EAAMQ,QAAQ,EAAG,EAAG,GAC5BS,WAAY,kDACZC,OAAQ,EACRC,aAAc,EACdC,UAAW,uCACXC,MAAO,QACPC,OAAQ,GACRC,QAAS,cA2QEC,MAvQf,WAAgB,IAAD,EACUC,IAAMC,SAAS,IADzB,mBACNC,EADM,KACDC,EADC,OAEyBH,IAAMC,SAAS,IAFxC,mBAENG,EAFM,KAEOC,EAFP,OAGaL,IAAMC,SAAS,IAH5B,mBAGNK,EAHM,KAGCC,EAHD,OAIaP,IAAMC,SAAS,IAJ5B,mBAINO,EAJM,KAICC,EAJD,OAKaT,IAAMC,SAAS,WAL5B,mBAKNS,EALM,KAKCC,EALD,OAMqBX,IAAMC,SAAS,IANpC,mBAMNW,EANM,KAMKC,EANL,OAOqBb,IAAMC,SAAS,IAPpC,mBAONa,EAPM,KAOKC,EAPL,KAUbC,qBAAW,WACTC,MAAM,gDAAkDP,GACvDQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OACRC,EAAgBD,EAAMX,QAExB,CAACA,IAEH,IAAMY,EAAkB,SAASD,EAAMX,GACrC,IAAIa,GAAS,EACS,IAAnBF,EAAKG,cACND,GAAS,GAEX,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAKK,MAAMC,OAAQF,IAClCf,IAAUW,EAAKK,MAAMD,GAAGvB,OACzBqB,EAAQE,IAGE,IAAXF,EACDK,EAAQP,EAAKK,MAAM,IAEbH,GAAO,GACbK,EAAQP,EAAKK,MAAMH,KAIjBK,EAAU,SAAC,GAAkD,IAAjD1B,EAAgD,EAAhDA,KAAMI,EAA0C,EAA1CA,MAAOF,EAAmC,EAAnCA,YAAayB,EAAsB,EAAtBA,iBAC1C1B,EAAQD,GACRK,EAASD,EAAMwB,OACfzB,EAAeD,GACfK,EAASoB,GACTE,QAAQC,IAAI1B,EAAMwB,MAAQ5B,GAC1Be,MAAM,gCAAgCX,EAAMwB,MAAM,IAAI5B,EAAK,uBAC1DgB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAe,GAAK,OACTpB,EAAaoB,OAKjB,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,UACb,0BAAMtC,MAAM,SAAZ,yBAoDR,YAAwC,IAAD,mBAAXe,GAAW,WAC/BwB,EAAU9D,IADqB,EAEb2B,IAAMC,SAAS,IAFF,mBAE9BmC,EAF8B,KAExBC,EAFwB,KAcrC,OACE,kBAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKP,UAAWC,EAAQtD,OACtB,yBAAK6D,IAAKC,IAAMC,IAAI,SACpB,kBAACC,EAAA,EAAD,CAAYN,UAAU,KAAKO,QAAQ,MAAnC,yBAGA,0BAAMZ,UAAWC,EAAQ9C,KAAM0D,YAAU,EAACC,SAf5B,SAASC,GAC3BtC,EAASyB,GACTa,EAAMC,mBAcA,kBAACC,EAAA,EAAD,CACEL,QAAQ,WACR1D,OAAO,SACPgE,UAAQ,EACRC,WAAS,EACTC,GAAG,oBACHC,MAAM,aACNrD,KAAK,aACLgC,UAAWC,EAAQqB,UACnBC,aAAa,aACbC,SA9BW,SAAAT,GACnBZ,EAAQY,EAAMU,OAAOC,QA8BbC,WAAS,IAEX,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLV,WAAS,EACTP,QAAQ,YACRlD,MAAM,UACNsC,UAAWC,EAAQ5C,QALrB,aAtFHyE,CAAW,CAACtD,EAAOC,IACpB,kBAAC2B,EAAA,EAAD,KACA,yBAAKJ,UAAU,WAAW+B,MAAO,CAACjF,QAAS,OAAOE,WAAY,SAASgF,eAAgB,WAoB7F,SAAmBhE,EAAMI,EAAOF,EAAaI,GAE3C,OACE,kBAAC2D,EAAA,EAAD,CAAMjC,UAAU,OAAO+B,MAAO,CAACzB,SAAU,IAAK4B,SAAU,MACtD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACzB,EAAA,EAAD,CAAY0B,cAAY,EAACzB,QAAQ,KAAKP,UAAU,MAC7CrC,GAEH,kBAAC2C,EAAA,EAAD,CAAYC,QAAQ,KAAKlD,MAAM,gBAAgB2C,UAAU,MACtDjC,GAEH,kBAACuC,EAAA,EAAD,CAAYC,QAAQ,QAAQlD,MAAM,gBAAgB2C,UAAU,KACzDnC,KAIP,kBAACoE,EAAA,EAAD,KACE,kBAAE,IAAF,MACChE,IAtCAiE,CAAUvE,EAAMI,EAAOF,EAAaI,IAEvC,yBAAK0B,UAAU,YACb,kBAACiC,EAAA,EAAD,KAgGR,SAAiB9C,EAAjB,GAAiD,IAAD,mBAAfN,GAAe,WAQ9C,OAAI2D,MAAMC,QAAQtD,GAKd,kBAAC,IAAD,CAAcuD,cAAe,GAAIrG,MAAOsG,IAAaC,SAAUjF,OAAQ,IACvEkF,QAAS,CACPC,SAAU,IACVC,OAAQ,CAAED,SAAU,OAGpB,kBAAC,IAAD,CACEzB,MAAO,QACPU,MAAO,CACLiB,UAAW,CAACC,SAAU,EAAGrF,QAAS,IAClCsF,WAAY,CAACD,SAAW,IAAUE,OAAQ,IAC1CC,KAAM,CAACC,YAAa,MAGxB,kBAAC,IAAD,CACEC,eAAa,EACbjC,MAAO,UACPU,MAAO,CACLiB,UAAW,CAACC,SAAU,EAAGrF,QAAS,IAClCsF,WAAY,CAACD,SAAU,MAG3B,kBAAC,IAAD,CACE9D,KAAMA,EACNoE,EAAE,eACFC,EAAE,QACFzB,MAAO,CAAC5C,KAAK,CAACsE,KAAM,YACpBC,OAAQ,CACN,CACEjC,OAAQ,OACRkC,cAAe,CACbC,YAAa,WAMX,OALA/E,EAAa,CACX,CAAE0E,EAAG,EAAGC,EAAI,KACZ,CAAED,EAAG,EAAGC,EAAI,KACZ,CAAED,EAAG,EAAGC,EAAI,MAEP,CACL,CAEE/B,OAAQ,OACRoC,SAAU,MACVC,SAAU,iBAAO,CAAE/B,MAAO,CAAE0B,KAAM,UAAWJ,aAAa,MAE5D,CAEE5B,OAAQ,OACRqC,SAAU,WACR,MAAO,CAAE/B,MAAO,CAAE0B,KAAM,QAASJ,aAAa,eApD3D,KAxGAU,CAAQrF,EAAU,CAACE,EAAUC,MAGlC,yBAAKmB,UAAU,SACb,kBAACiC,EAAA,EAAD,KA6KR,SAAoB9C,GAClB,IAAIqD,MAAMC,QAAQtD,GAChB,OAAO,KAET,OACE,kBAAC,IAAD,CAAc6E,OAAK,EACjB3H,MAAOsG,IAAaC,SACpBqB,UAAW,CAACT,EAAE,IAEd,kBAAC,IAAD,CAAkBF,eAAa,EAC7BvB,MAAO,CAAEmC,KAAM,CAAEC,OAAQ,SACzBC,WAAY,SAACC,GAAD,OAAO,QAErB,kBAAC,IAAD,MACA,kBAAC,IAAD,CACElF,KAAMA,EACN4C,MAAO,CACP5C,KAAM,CAAEsE,KAAM,eA7LXa,CAAW1F,QCzGF2F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlG,MAAK,SAAAmG,GACjCA,EAAaC,kB","file":"static/js/main.76dc2c3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/desktop-icon.32fc033c.svg\";","import React, { useEffect } from 'react';\nimport './App.css';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Star from '@material-ui/icons/Star';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Logo from './desktop-icon.svg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryArea, VictoryPolarAxis } from 'victory';\nimport { fontSize } from '@material-ui/system';\n\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(3, 0, 2),\n    background: 'linear-gradient(45deg, #834d9b 30%,#d04ed6 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(208, 78, 214, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n}));\n\nfunction App() {\n  const [name,setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [owner, setOwner] = React.useState('');\n  const [stars, setStars] = React.useState('');\n  const [input, setInput] = React.useState('flutter');\n  const [graphData, setGraphData] = React.useState('');\n  const [radarData, setRadarData] = React.useState('');\n\n\n  useEffect( () => {\n    fetch(\"https://api.github.com/search/repositories?q=\" + input)\n    .then(res => res.json())\n    .then(data => (\n      findInputInData(data, input)\n    ))\n  },[input])\n\n  const findInputInData = function(data, input) {\n    let found = -1;\n    if(data.total_count===0) {\n      found = -2;\n    }\n    for (let i = 0; i < data.items.length; i++) {\n      if(input === data.items[i].name) {\n        found = i;\n      }\n    }\n    if(found === -1) {\n      setData(data.items[0]);\n    }\n    else if(found>-1){\n      setData(data.items[found])\n    }\n  }\n\n  const setData = ({name, owner, description, stargazers_count}) => {\n    setName(name);\n    setOwner(owner.login)\n    setDescription(description);\n    setStars(stargazers_count);\n    console.log(owner.login + name);\n    fetch(\"https://api.github.com/repos/\"+owner.login+\"/\"+name+\"/stats/contributors\")\n    .then(res=>res.json())\n    .then(gdata => (\n      setGraphData(gdata)\n    ));\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className='navbar'>\n        <font color=\"white\">GitHub Visualisation</font>\n      </div>\n      {RepoSearch([input, setInput])}\n      <Container>\n      <div className=\"repoCard\" style={{display: 'flex',alignItems: 'center',justifyContent: 'center',}}>\n        {MediaCard(name, owner, description, stars)}\n      </div>\n      <div className=\"barChart\">\n        <Card>\n          {testBar(graphData,[radarData,setRadarData])}\n        </Card>\n      </div>\n      <div className=\"radar\">\n        <Card>\n          {RadarChart(radarData)}\n        </Card>\n      </div>\n      </Container>\n    </div>\n  );\n}\n\n\n\nfunction MediaCard(name, owner, description, stars) {\n\n  return (\n    <Card className=\"card\" style={{maxWidth: 400, minWidth: 400}}>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography variant=\"h6\" color=\"textSecondary\" component=\"h2\">\n            {owner}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        < Star/>\n        {stars}\n      </CardActions>\n    </Card>\n  );\n}\n\n\n\n\nfunction RepoSearch([input, setInput]) {\n  const classes = useStyles();\n  const [repo, setRepo] = React.useState('');\n  const handleChange = event => {\n    setRepo(event.target.value);\n  };\n\n  const doSomething = function(event) {\n    setInput(repo);\n    event.preventDefault();\n  };\n\n  \n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <img src={Logo} alt=\"Logo\"/>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter Repository Name\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={doSomething}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"repository-inputs\"\n            label=\"Repository\"\n            name=\"repository\"\n            className={classes.textField}\n            autoComplete=\"repository\"\n            onChange={handleChange}\n            autoFocus\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Search\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\n\nfunction testBar(data,[radarData,setRadarData]) {\n  // const data = [\n  //   {users: 1, commits: 13000, username: \"owjoh\"},\n  //   {users: 2, commits: 16500, username: \"owjoh\"},\n  //   {users: 3, commits: 14250, username: \"owjoh\"},\n  //   {users: 4, commits: 19000, username: \"owjoh\"}\n  // ];\n\n  if(!Array.isArray(data)) {\n    return(null);\n  }\n  else {\n    return (\n      <VictoryChart domainPadding={20} theme={VictoryTheme.material} height={200} \n      animate={{\n        duration: 1000,\n        onLoad: { duration: 500}\n      }}\n      >\n        <VictoryAxis\n          label={\"Users\"}\n          style={{\n            axisLabel: {fontSize: 5, padding: 30},\n            tickLabels: {fontSize: (5*(1/2)), angle: -90},\n            grid: {strokeWidth: 0}\n          }}\n        />\n        <VictoryAxis\n          dependentAxis\n          label={\"Commits\"}\n          style={{\n            axisLabel: {fontSize: 5, padding: 30},\n            tickLabels: {fontSize: 5, },\n          }}\n        />\n        <VictoryBar\n          data={data}\n          x=\"author.login\"\n          y=\"total\"\n          style={{data:{fill: \"#9D50BB\"}}}\n          events={[\n            {\n              target: \"data\",\n              eventHandlers: {\n                onMouseOver: () => {\n                  setRadarData([\n                    { x: 1, y: (1500/2000)},\n                    { x: 2, y: (50/200)},\n                    { x: 3, y: (90/100)},\n                  ]);\n                  return [\n                    {\n                      // Add an event to reset all the points to the original color\n                      target: \"data\",\n                      eventKey: \"all\",\n                      mutation: () => ({ style: { fill: \"#9D50BB\", strokeWidth:-5} })\n                    },\n                    {\n                      // Then add an event to set changes. (eventKey will automatically use current target)\n                      target: \"data\",\n                      mutation: () => {\n                        return { style: { fill: \"black\", strokeWidth:-15 } };\n                      }\n                    }\n                  ];\n                }\n              }\n            }\n          ]}\n          \n        />\n      </VictoryChart>\n    );\n  }\n}\n\nfunction formatRadarData(data) {\n  var formatted;\n\n  return(formatted);\n}\n\nfunction RadarChart(data) {\n  if(!Array.isArray(data)) {\n    return(null);\n  }\n  return(\n    <VictoryChart polar\n      theme={VictoryTheme.material}\n      maxDomain={{y:1}}\n    >\n      <VictoryPolarAxis dependentAxis\n        style={{ axis: { stroke: \"none\" } }}\n        tickFormat={(t) => null}\n      />\n      <VictoryPolarAxis/>\n      <VictoryArea\n        data={data}\n        style={{\n        data: { fill: \"#9D50BB\", },\n        }}\n      />\n    </VictoryChart>\n  );\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}