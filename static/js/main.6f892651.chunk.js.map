{"version":3,"sources":["desktop-icon.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","width","button","background","border","borderRadius","boxShadow","color","height","padding","card","minWidth","barCard","mediaCard","searchCard","flexCard","App","React","useState","name","setName","description","setDescription","owner","setOwner","stars","setStars","input","setInput","graphData","setGraphData","radarData","setRadarData","lineData","setLineData","useEffect","fetch","then","res","json","data","findInputInData","found","total_count","i","items","length","setData","stargazers_count","login","console","log","gdata","formatGraphData","currentAdditions","currentDelections","formatted","highestTotalAdd","highestTotalDel","Array","isArray","highestTotalCommits","total","j","weeks","a","d","classes","className","Card","repo","setRepo","Container","component","maxWidth","CssBaseline","src","Logo","alt","Typography","variant","noValidate","onSubmit","event","preventDefault","TextField","required","fullWidth","id","label","textField","autoComplete","onChange","target","value","autoFocus","Button","type","RepoSearch","style","justifyContent","CardActionArea","CardContent","gutterBottom","CardActions","MediaCard","inData","domainPadding","VictoryTheme","material","animate","duration","onLoad","axisLabel","fontSize","tickLabels","angle","grid","strokeWidth","dependentAxis","x","y","fill","events","eventHandlers","onMouseOver","evt","props","index","highestTotalCom","author","totalAdd","totalDel","eventKey","mutation","testBar","paddingBottom","polar","maxDomain","axis","stroke","tickFormat","t","labelPlacement","tickCount","fillOpacity","RadarChart","parent","LineChart","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,0C,sXCmBrCC,G,OAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC,UAAW,CACTC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,QAI1CC,MAAO,CACLC,UAAWP,EAAMQ,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQb,EAAMQ,QAAQ,IAExBM,KAAM,CACJC,MAAO,OACPR,UAAWP,EAAMQ,QAAQ,IAE3BQ,OAAQ,CACNH,OAAQb,EAAMQ,QAAQ,EAAG,EAAG,GAC5BS,WAAY,kDACZC,OAAQ,EACRC,aAAc,EACdC,UAAW,uCACXC,MAAO,QACPC,OAAQ,GACRC,QAAS,UAGXC,KAAM,CACJN,OAAQ,EACRC,aAAc,GACdC,UAAW,gCACXC,MAAO,QACPN,MAAM,QACNO,OAAO,QACPG,SAAS,SAGXC,QAAS,CACPR,OAAQ,EACRC,aAAc,GACdC,UAAW,gCACXC,MAAO,SAGTM,UAAW,CACTT,OAAQ,EACRC,aAAc,GACdC,UAAW,gCACXC,MAAO,QACPN,MAAM,SAIRa,WAAY,CACVV,OAAQ,EACRC,aAAc,GACdC,UAAW,gCACXC,MAAO,QACPN,MAAM,QACNO,OAAO,SAGTO,SAAU,CACRX,OAAQ,EACRC,aAAc,GACdC,UAAW,gCACXC,MAAO,QACPN,MAAM,OACNO,OAAO,cAsXIQ,MAjXf,WAAgB,IAAD,EACUC,IAAMC,SAAS,IADzB,mBACNC,EADM,KACDC,EADC,OAEyBH,IAAMC,SAAS,IAFxC,mBAENG,EAFM,KAEOC,EAFP,OAGaL,IAAMC,SAAS,IAH5B,mBAGNK,EAHM,KAGCC,EAHD,OAIaP,IAAMC,SAAS,IAJ5B,mBAINO,EAJM,KAICC,EAJD,OAKaT,IAAMC,SAAS,kBAL5B,mBAKNS,EALM,KAKCC,EALD,OAMqBX,IAAMC,SAAS,IANpC,mBAMNW,EANM,KAMKC,EANL,OAOqBb,IAAMC,SAAS,IAPpC,mBAONa,EAPM,KAOKC,EAPL,OAQmBf,IAAMC,SAAS,IARlC,mBAQNe,EARM,KAQIC,EARJ,KAWbC,qBAAW,WACTC,MAAM,gDAAkDT,GACvDU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OACRC,GAAgBD,EAAMb,QAExB,CAACA,IAEH,IAAMc,GAAkB,SAASD,EAAMb,GACrC,IAAIe,GAAS,EACS,IAAnBF,EAAKG,cACND,GAAS,GAEX,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAKK,MAAMC,OAAQF,IAClCjB,IAAUa,EAAKK,MAAMD,GAAGzB,OACzBuB,EAAQE,IAGE,IAAXF,EACDK,GAAQP,EAAKK,MAAM,IAEbH,GAAO,GACbK,GAAQP,EAAKK,MAAMH,KAIjBK,GAAU,SAAC,GAAkD,IAAjD5B,EAAgD,EAAhDA,KAAMI,EAA0C,EAA1CA,MAAOF,EAAmC,EAAnCA,YAAa2B,EAAsB,EAAtBA,iBAC1C5B,EAAQD,GACRK,EAASD,EAAM0B,OACf3B,EAAeD,GACfK,EAASsB,GACTE,QAAQC,IAAI5B,EAAM0B,MAAQ9B,GAC1BiB,MAAM,gCAAgCb,EAAM0B,MAAM,IAAI9B,EAAK,uBAC1DkB,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAe,GAAK,OACTC,GAAgBD,OAKdC,GAAkB,SAACb,GACvB,IACIc,EACAC,EAFAC,EAAYhB,EAGZiB,EAAgB,EAChBC,EAAgB,EACpB,GAAGC,MAAMC,QAAQJ,GACf,IAAIK,EAAoBL,EAAUA,EAAUV,OAAO,GAAGgB,MAExD,IAAI,IAAIlB,EAAG,EAAGA,EAAIY,EAAUV,OAAQF,IAAK,CACvCU,EAAiB,EACjBC,EAAkB,EAClB,IAAI,IAAIQ,EAAI,EAAGA,EAAIP,EAAUZ,GAAGoB,MAAMlB,OAAQiB,IAC5CT,GAAkCE,EAAUZ,GAAGoB,MAAMD,GAAGE,EACxDV,GAAoCC,EAAUZ,GAAGoB,MAAMD,GAAGG,EAE5DV,EAAUZ,GAAV,SAA2BU,EAC3BE,EAAUZ,GAAV,SAA2BW,EACxBA,EAAkBG,IACnBA,EAAgBH,GAEfD,EAAiBG,IAClBA,EAAgBH,GAIpBE,EAAS,gBAAoBK,EAC7BL,EAAS,gBAAoBC,EAC7BD,EAAS,gBAAoBE,EAC7BR,QAAQC,IAAIK,GACZ1B,EAAa0B,IAGTW,GAAUnF,IAChB,OACE,yBAAKoF,UAAU,OACb,yBAAKA,UAAU,UACb,0BAAM7D,MAAM,SAAZ,yBAEF,yBAAK6D,UAAWD,GAAQ3E,OACtB,kBAAC6E,EAAA,EAAD,CAAMD,UAAWD,GAAQrD,YA+DjC,YAAwC,IAAD,mBAAXc,GAAW,WAC/BuC,EAAUnF,IADqB,EAEbiC,IAAMC,SAAS,IAFF,mBAE9BoD,EAF8B,KAExBC,EAFwB,KAcrC,OACE,kBAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAKP,UAAWD,EAAQ3E,OACtB,yBAAKoF,IAAKC,IAAMC,IAAI,SACpB,kBAACC,EAAA,EAAD,CAAYN,UAAU,KAAKO,QAAQ,MAAnC,yBAGA,0BAAMZ,UAAWD,EAAQnE,KAAMiF,YAAU,EAACC,SAf5B,SAASC,GAC3BvD,EAAS0C,GACTa,EAAMC,mBAcA,kBAACC,EAAA,EAAD,CACEL,QAAQ,WACRjF,OAAO,SACPuF,UAAQ,EACRC,WAAS,EACTC,GAAG,oBACHC,MAAM,aACNtE,KAAK,aACLiD,UAAWD,EAAQuB,UACnBC,aAAa,aACbC,SA9BW,SAAAT,GACnBZ,EAAQY,EAAMU,OAAOC,QA8BbC,WAAS,IAEX,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLV,WAAS,EACTP,QAAQ,YACRzE,MAAM,UACN6D,UAAWD,EAAQjE,QALrB,aAlGCgG,CAAW,CAACvE,EAAOC,MAGxB,kBAAC4C,EAAA,EAAD,KACE,yBAAKJ,UAAU,WAAW+B,MAAO,CAACxG,QAAS,OAAOE,WAAY,SAASuG,eAAgB,WAuB/F,SAAmBjF,EAAMI,EAAOF,EAAaI,GAC3BzC,IAChB,OACE,kBAACqF,EAAA,EAAD,CAAM8B,MAAO,CACTzB,SAAU,IACV/D,SAAU,IACVP,OAAQ,EACRC,aAAc,GACdC,UAAW,kCAGb,kBAAC+F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACvB,EAAA,EAAD,CAAYwB,cAAY,EAACvB,QAAQ,KAAKP,UAAU,MAC7CtD,GAEH,kBAAC4D,EAAA,EAAD,CAAYC,QAAQ,KAAKzE,MAAM,gBAAgBkE,UAAU,MACtDlD,GAEH,kBAACwD,EAAA,EAAD,CAAYC,QAAQ,QAAQzE,MAAM,gBAAgBkE,UAAU,KACzDpD,KAIP,kBAACmF,EAAA,EAAD,KACE,kBAAE,IAAF,MACC/E,IAhDEgF,CAAUtF,EAAMI,EAAOF,EAAaI,IAEvC,yBAAK0E,MAAO,CAACvG,cAAc,QACzB,yBAAKwE,UAAU,YACb,kBAACC,EAAA,EAAD,CAAMD,UAAWD,GAAQvD,SAyGrC,SAAiB8F,EAAjB,KAA0E,IAAD,mBAAtC1E,GAAsC,8BAAdE,GAAc,WAEvE,OAAIyB,MAAMC,QAAQ8C,GAKd,kBAAC,IAAD,CAAcC,cAAe,GAAIzH,MAAO0H,IAAaC,SAAUrG,OAAQ,IACvEsG,QAAS,CACPC,SAAU,IACVC,OAAQ,CAAED,SAAU,OAGpB,kBAAC,IAAD,CACEtB,MAAO,QACPU,MAAO,CACLc,UAAW,CAACC,SAAU,EAAGzG,QAAS,IAClC0G,WAAY,CAACD,SAAW,IAAUE,OAAQ,IAC1CC,KAAM,CAACC,YAAa,MAGxB,kBAAC,IAAD,CACEC,eAAa,EACb9B,MAAO,UACPU,MAAO,CACLc,UAAW,CAACC,SAAU,EAAGzG,QAAS,IAClC0G,WAAY,CAACD,SAAU,MAG3B,kBAAC,IAAD,CACE1E,KAAMkE,EACNc,EAAE,eACFC,EAAE,QACFtB,MAAO,CAAC3D,KAAK,CAACkF,KAAM,YACpBC,OAAQ,CACN,CACE9B,OAAQ,OACR+B,cAAe,CACbC,YAAa,SAACC,EAAKC,GAOjB,OANA/F,EAAa,CACX,CAACyF,EAAKf,EAAOqB,EAAMC,OAAOlE,MAAQ4C,EAAOuB,gBAAmBhF,MAAOyD,EAAOqB,EAAMC,OAAOE,OAAOjF,OAC9F,CAACwE,EAAKf,EAAOqB,EAAMC,OAAOG,SAAWzB,EAAOjD,iBAC5C,CAACgE,EAAKf,EAAOqB,EAAMC,OAAOI,SAAW1B,EAAOhD,mBAE9CxB,EAAYwE,EAAOqB,EAAMC,QAClB,CACL,CAEEnC,OAAQ,OACRwC,SAAU,MACVC,SAAU,iBAAO,CAAEnC,MAAO,CAAEuB,KAAM,UAAWJ,aAAa,MAE5D,CAEEzB,OAAQ,OACRyC,SAAU,WACR,MAAO,CAAEnC,MAAO,CAAEuB,KAAM,UAAWJ,aAAa,eArD7D,gDA3GIiB,CAAQ1G,EAAU,CAACE,EAAUC,GAAc,CAACC,EAASC,MAG1D,yBAAKiE,MAAO,CAACqC,cAAc,GAAI7I,QAAS,OAAOC,cAAe,MAAMC,WAAY,WAC5E,kBAACwE,EAAA,EAAD,CAAMD,UAAWD,GAAQzD,MAsOvC,SAAoB8B,GAClB,IAAImB,MAAMC,QAAQpB,GAChB,OAAO,KAET,OACE,kBAAC,IAAD,CAAciG,OAAK,EACjBvJ,MAAO0H,IAAaC,SACpB6B,UAAW,CAACjB,EAAE,IAGd,kBAAC,IAAD,CAAkBF,eAAa,EAC7BpB,MAAO,CAAEwC,KAAM,CAAEC,OAAQ,SACzBC,WAAY,SAACC,GAAD,OAAK,QAEnB,kBAAC,IAAD,CACEC,eAAe,gBACfC,UAAW,EACXH,WAAY,CAAC,YAAY,YAAY,aAEvC,kBAAC,IAAD,CACErG,KAAMA,EACN2D,MAAO,CACP3D,KAAM,CAAEkF,KAAM,UAAWuB,YAAa,GAAG3B,YAAY,EAAGsB,OAAQ,YAEhE9B,QAAS,CACPC,SAAU,IACVC,OAAQ,CAAED,SAAU,SA/PbmC,CAAWnH,IAEd,yBAAKoE,MAAO,CAAClG,MAAM,MACnB,kBAACoE,EAAA,EAAD,CAAMD,UAAWD,GAAQpD,UAuKvC,SAAmByB,GAEjB,GADAU,QAAQC,IAAIX,EAAKwB,QACbL,MAAMC,QAAQpB,EAAKwB,OAErB,OADAd,QAAQC,IAAI,QACL,KAGP,IAAI,IAAIP,EAAI,EAAGA,EAAIJ,EAAKwB,MAAMlB,OAAQF,IACpCJ,EAAKwB,MAAMpB,GAAX,OAA0BA,EAI9B,OACE,kBAAC4B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,KACE,kBAAC,IAAD,CACEhE,OAAQ,IACRP,MAAO,IACPf,MAAO0H,IAAaC,SACpBC,QAAS,CACPC,SAAU,IACVC,OAAQ,CAAED,SAAU,OAGtB,kBAAC,IAAD,CACEZ,MAAO,CACL3D,KAAM,CAAEoG,OAAQ,WAChBO,OAAQ,CAAE/I,OAAQ,mBAGpBoC,KAAMA,EAAKwB,MACXwD,EAAE,SACFC,EAAE,IACFoB,WAAYrG,EAAKwB,MAAMlB,SAEzB,kBAAC,IAAD,CACEyE,eAAa,EACb9B,MAAO,UACPU,MAAO,CACLc,UAAW,CAACC,SAAU,GAAIzG,QAAS,IACnC0G,WAAY,CAACD,SAAU,GAAUE,MAAO,MAG5C,kBAAC,IAAD,CACE3B,MAAO,OACPU,MAAO,CACLc,UAAW,CAACC,SAAU,GAAIzG,QAAS,IACnC0G,WAAY,CAACD,SAAU,GAAUE,MAAO,IAE1CyB,WAAY,SAACC,GAAD,MAAO,OAAU,EAAFA,QAvNtBM,CAAUnH,SCnMPoH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3H,MAAK,SAAA4H,GACjCA,EAAaC,kB","file":"static/js/main.6f892651.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/desktop-icon.32fc033c.svg\";","import React, { useEffect } from 'react';\nimport './App.css';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Star from '@material-ui/icons/Star';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Logo from './desktop-icon.svg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryArea, VictoryPolarAxis, VictoryLine } from 'victory';\nimport { fontSize } from '@material-ui/system';\nimport { classDeclaration } from '@babel/types';\n\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(3, 0, 2),\n    background: 'linear-gradient(45deg, #834d9b 30%,#d04ed6 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(208, 78, 214, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    \n  },\n  card: {\n    border: 0,\n    borderRadius: 10,\n    boxShadow: '0 3px 5px 2px rgba(0,0,0, .3)',\n    color: 'white',\n    width:'400px',\n    height:'400px',\n    minWidth:'400px',\n    \n  },\n  barCard: {\n    border: 0,\n    borderRadius: 10,\n    boxShadow: '0 3px 5px 2px rgba(0,0,0, .3)',\n    color: 'white',\n  },\n\n  mediaCard: {\n    border: 0,\n    borderRadius: 10,\n    boxShadow: '0 3px 5px 2px rgba(0,0,0, .3)',\n    color: 'white',\n    width:'400px',\n  },\n\n\n  searchCard: {\n    border: 0,\n    borderRadius: 10,\n    boxShadow: '0 3px 5px 2px rgba(0,0,0, .3)',\n    color: 'white',\n    width:'400px',\n    height:'400px',\n  },\n\n  flexCard: {\n    border: 0,\n    borderRadius: 10,\n    boxShadow: '0 3px 5px 2px rgba(0,0,0, .3)',\n    color: 'white',\n    width:'100%',\n    height:'400px',\n    \n  },\n}));\n\nfunction App() {\n  const [name,setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [owner, setOwner] = React.useState('');\n  const [stars, setStars] = React.useState('');\n  const [input, setInput] = React.useState('flutter/cocoon');\n  const [graphData, setGraphData] = React.useState('');\n  const [radarData, setRadarData] = React.useState('');\n  const [lineData, setLineData] = React.useState('');\n\n\n  useEffect( () => {\n    fetch(\"https://api.github.com/search/repositories?q=\" + input)\n    .then(res => res.json())\n    .then(data => (\n      findInputInData(data, input)\n    ))\n  },[input])\n\n  const findInputInData = function(data, input) {\n    let found = -1;\n    if(data.total_count===0) {\n      found = -2;\n    }\n    for (let i = 0; i < data.items.length; i++) {\n      if(input === data.items[i].name) {\n        found = i;\n      }\n    }\n    if(found === -1) {\n      setData(data.items[0]);\n    }\n    else if(found>-1){\n      setData(data.items[found])\n    }\n  }\n\n  const setData = ({name, owner, description, stargazers_count}) => {\n    setName(name);\n    setOwner(owner.login)\n    setDescription(description);\n    setStars(stargazers_count);\n    console.log(owner.login + name);\n    fetch(\"https://api.github.com/repos/\"+owner.login+\"/\"+name+\"/stats/contributors\")\n    .then(res=>res.json())\n    .then(gdata => (\n      formatGraphData(gdata)\n    ));\n  \n  }\n\n  const formatGraphData = (data)=> {\n    var formatted = data;\n    var currentAdditions;\n    var currentDelections;\n    var highestTotalAdd=0;\n    var highestTotalDel=0;\n    if(Array.isArray(formatted)){\n      var highestTotalCommits=formatted[formatted.length-1].total;\n    }\n    for(let i =0; i < formatted.length; i++) {\n      currentAdditions=0;\n      currentDelections=0;\n      for(let j = 0; j < formatted[i].weeks.length; j++) {\n        currentAdditions=currentAdditions+formatted[i].weeks[j].a;\n        currentDelections=currentDelections+formatted[i].weeks[j].d;\n      }\n      formatted[i][\"totalAdd\"] = currentAdditions;\n      formatted[i][\"totalDel\"] = currentDelections;\n      if(currentDelections>highestTotalDel){\n        highestTotalDel=currentDelections;\n      }\n      if(currentAdditions>highestTotalAdd){\n        highestTotalAdd=currentAdditions;\n      }\n\n    }\n    formatted[\"highestTotalCom\"]=highestTotalCommits;\n    formatted[\"highestTotalAdd\"]=highestTotalAdd;\n    formatted[\"highestTotalDel\"]=highestTotalDel;\n    console.log(formatted);\n    setGraphData(formatted);\n  }\n\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <div className='navbar'>\n        <font color=\"white\">GitHub Visualisation</font>\n      </div>\n      <div className={classes.paper}>\n        <Card className={classes.searchCard}>\n          {RepoSearch([input, setInput])}\n        </Card>\n      </div>\n      <Container>\n        <div className=\"repoCard\" style={{display: 'flex',alignItems: 'center',justifyContent: 'center',}}>\n          {MediaCard(name, owner, description, stars)}\n        </div>\n        <div style={{flexDirection:'row'}}>\n          <div className=\"barChart\">\n            <Card className={classes.barCard}>\n              {testBar(graphData,[radarData,setRadarData],[lineData,setLineData])}\n            </Card>\n          </div>\n          <div style={{paddingBottom:20, display: 'flex',flexDirection: 'row',alignItems: 'center',}}>\n              <Card className={classes.card}>\n                {RadarChart(radarData)}\n              </Card>\n              <div style={{width:25}}></div>\n              <Card className={classes.flexCard}>\n                {LineChart(lineData)}\n              </Card>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\nfunction MediaCard(name, owner, description, stars) {\n  const classes = useStyles();\n  return (\n    <Card style={{\n        maxWidth: 400,\n        minWidth: 400,\n        border: 0,\n        borderRadius: 10,\n        boxShadow: '0 3px 5px 2px rgba(0,0,0, .3)',\n      }}\n    >\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography variant=\"h6\" color=\"textSecondary\" component=\"h2\">\n            {owner}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        < Star/>\n        {stars}\n      </CardActions>\n    </Card>\n  );\n}\n\n\n\n\nfunction RepoSearch([input, setInput]) {\n  const classes = useStyles();\n  const [repo, setRepo] = React.useState('');\n  const handleChange = event => {\n    setRepo(event.target.value);\n  };\n\n  const doSomething = function(event) {\n    setInput(repo);\n    event.preventDefault();\n  };\n\n  \n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <img src={Logo} alt=\"Logo\"/>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter Repository Name\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={doSomething}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"repository-inputs\"\n            label=\"Repository\"\n            name=\"repository\"\n            className={classes.textField}\n            autoComplete=\"repository\"\n            onChange={handleChange}\n            autoFocus\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Search\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\n\nfunction testBar(inData,[radarData,setRadarData],[lineData,setLineData]) {\n  \n  if(!Array.isArray(inData)) {\n    return(<h3>Loading graph...</h3>);\n  }\n  else {\n    return (\n      <VictoryChart domainPadding={20} theme={VictoryTheme.material} height={200} \n      animate={{\n        duration: 1000,\n        onLoad: { duration: 500}\n      }}\n      >\n        <VictoryAxis\n          label={\"Users\"}\n          style={{\n            axisLabel: {fontSize: 5, padding: 30},\n            tickLabels: {fontSize: (5*(1/2)), angle: -90},\n            grid: {strokeWidth: 0}\n          }}\n        />\n        <VictoryAxis\n          dependentAxis\n          label={\"Commits\"}\n          style={{\n            axisLabel: {fontSize: 5, padding: 30},\n            tickLabels: {fontSize: 5, },\n          }}\n        />\n        <VictoryBar\n          data={inData}\n          x=\"author.login\"\n          y=\"total\"\n          style={{data:{fill: \"#9D50BB\"}}}\n          events={[\n            {\n              target: \"data\",\n              eventHandlers: {\n                onMouseOver: (evt, props) => {\n                  setRadarData([\n                    {y: ((inData[props.index].total)/(inData.highestTotalCom)), login:(inData[props.index].author.login)},\n                    {y: ((inData[props.index].totalAdd)/(inData.highestTotalAdd))},\n                    {y: ((inData[props.index].totalDel)/(inData.highestTotalDel))},\n                  ]);\n                  setLineData(inData[props.index]);\n                  return [\n                    {\n                      // Add an event to reset all the points to the original color\n                      target: \"data\",\n                      eventKey: \"all\",\n                      mutation: () => ({ style: { fill: \"#9D50BB\", strokeWidth:-5} })\n                    },\n                    {\n                      // Then add an event to set changes. (eventKey will automatically use current target)\n                      target: \"data\",\n                      mutation: () => {\n                        return { style: { fill: \"#873ffb\", strokeWidth:-15 } };\n                      }\n                    }\n                  ];\n                }\n              }\n            }\n          ]}\n          \n        />\n      </VictoryChart>\n    );\n  }\n}\n\nfunction LineChart(data) {\n  console.log(data.weeks);\n  if(!Array.isArray(data.weeks)) {\n    console.log(\"sake\")\n    return(null);\n  }\n  else {\n    for(let i = 0; i < data.weeks.length; i++) {\n      data.weeks[i][\"weekNo\"] = i;\n    }\n  }\n  \n  return(\n    <Container>\n      <Container>\n        <VictoryChart\n          height={200}\n          width={300}\n          theme={VictoryTheme.material}\n          animate={{\n            duration: 300,\n            onLoad: { duration: 300}\n          }}\n        >\n          <VictoryLine\n            style={{\n              data: { stroke: \"#873ffb\" },\n              parent: { border: \"1px solid #ccc\"},\n\n            }}\n            data={data.weeks}\n            x=\"weekNo\"\n            y=\"c\"\n            tickFormat={data.weeks.length}\n          />\n          <VictoryAxis\n            dependentAxis\n            label={\"Commits\"}\n            style={{\n              axisLabel: {fontSize: 10, padding: 30},\n              tickLabels: {fontSize: 20*(1/2), angle: 0},\n            }}\n          />\n          <VictoryAxis\n            label={\"Week\"}\n            style={{\n              axisLabel: {fontSize: 10, padding: 30},\n              tickLabels: {fontSize: 20*(1/2), angle: 0},\n            }}\n            tickFormat={(t) => 'Day '+(t*7)}\n          />\n          \n        </VictoryChart>\n      </Container>\n    </Container>\n  );\n}\n\n\nfunction RadarChart(data) {\n  if(!Array.isArray(data)) {\n    return(null);\n  }\n  return(\n    <VictoryChart polar\n      theme={VictoryTheme.material}\n      maxDomain={{y:1}}\n      \n    >\n      <VictoryPolarAxis dependentAxis\n        style={{ axis: { stroke: \"none\" } }}\n        tickFormat={(t)=>null}\n      />\n      <VictoryPolarAxis\n        labelPlacement=\"perpendicular\"\n        tickCount={3}\n        tickFormat={[\"Additions\",\"Deletions\",\"Commits\"]}\n      />\n      <VictoryArea\n        data={data}\n        style={{\n        data: { fill: \"#873ffb\", fillOpacity: .7,strokeWidth:2, stroke: \"#873ffb\"},\n        }}\n        animate={{\n          duration: 300,\n          onLoad: { duration: 300}\n        }}\n      />\n    </VictoryChart>\n  );\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}